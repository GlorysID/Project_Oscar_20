document.addEventListener("DOMContentLoaded", function () {
  const avatarEditIcon = document.getElementById("avatarEditIcon");
  const avatarEditHover = document.getElementById("avatarEditHover");
  const avatarImg = document.getElementById("avatarImg");
  const avatarInput = document.getElementById("avatarInput");

  const btnAvatarDelete = document.getElementById("btnAvatarDelete");
  const avatarCropModal = document.getElementById("avatarCropModal");
  const avatarCropPreview = document.getElementById("avatarCropPreview");
  const avatarCropClose = document.getElementById("avatarCropClose");
  const avatarCropCancel = document.getElementById("avatarCropCancel");
  const avatarCropApply = document.getElementById("avatarCropApply");
  const avatarZoom = document.getElementById("avatarZoom");
  let cropImg = null;
  let cropZoom = 1;
  const defaultAvatar = "img/profileicon.png";

  // Set default avatar saat halaman pertama kali dibuka
  avatarImg.src = defaultAvatar;

  btnAvatarUpload.addEventListener("click", () => avatarInput.click());

  avatarInput.addEventListener("change", function () {
    const file = this.files[0];
    if (!file) return;
    if (!["image/png", "image/jpeg", "image/webp"].includes(file.type) || file.size > 1024 * 1024) {
      alert("Format harus JPG/PNG/WebP dan ukuran â‰¤ 1 MB.");
      return;
    }
    const reader = new FileReader();
    reader.onload = function (e) {
      cropImg = new Image();
      cropImg.src = e.target.result;
      cropImg.onload = function () {
        avatarCropPreview.innerHTML = "";
        cropImg.style.transform = `scale(${cropZoom})`;
        avatarCropPreview.appendChild(cropImg);
        avatarCropModal.classList.add("active");
      };
    };
    reader.readAsDataURL(file);
  });

  avatarZoom.addEventListener("input", function () {
    cropZoom = parseFloat(this.value);
    if (cropImg) cropImg.style.transform = `scale(${cropZoom})`;
  });

  avatarCropApply.addEventListener("click", function () {
    if (!cropImg) return;
    // Render crop to canvas
    const canvas = document.createElement("canvas");
    canvas.width = 220;
    canvas.height = 220;
    const ctx = canvas.getContext("2d");
    ctx.save();
    ctx.beginPath();
    ctx.arc(110, 110, 110, 0, Math.PI * 2);
    ctx.closePath();
    ctx.clip();
    // Draw image with zoom centered
    const iw = cropImg.naturalWidth, ih = cropImg.naturalHeight;
    const scale = cropZoom;
    const sw = iw / scale, sh = ih / scale;
    ctx.drawImage(
      cropImg,
      (iw - sw) / 2, (ih - sh) / 2, sw, sh,
      0, 0, 220, 220
    );
    ctx.restore();
    avatarImg.src = canvas.toDataURL("image/png");
    avatarCropModal.classList.remove("active");
    cropImg = null;
    avatarInput.value = "";
  });

  avatarCropClose.addEventListener("click", function () {
    avatarCropModal.classList.remove("active");
    cropImg = null;
    avatarInput.value = "";
  });
  avatarCropCancel.addEventListener("click", function () {
    avatarCropModal.classList.remove("active");
    cropImg = null;
    avatarInput.value = "";
  });

  btnAvatarDelete.addEventListener("click", function () {
    avatarImg.src = defaultAvatar;
    avatarInput.value = "";
  });

  // Tambahan untuk nama & username
  const avatarName = document.getElementById("avatarName");
  const avatarUsername = document.getElementById("avatarUsername");
  const nameInput = document.querySelector('input[placeholder="Nama lengkap"]');
  const usernameInput = document.querySelector('input[placeholder="username_ku"]');

  function updateAvatarInfo() {
    avatarName.textContent = nameInput.value.trim() || "Nama";
    avatarUsername.textContent = usernameInput.value.trim() ? "@" + usernameInput.value.trim() : "@username";
  }
  nameInput.addEventListener("input", updateAvatarInfo);
  usernameInput.addEventListener("input", updateAvatarInfo);
  updateAvatarInfo();

  // XP Role Logic
  const xpValue = document.getElementById("xpValue");
  const xpRole = document.getElementById("xpRole");
  const xpUp = document.getElementById("xpUp");
  const xpDown = document.getElementById("xpDown");
  const xpBar = document.getElementById("xpBar");
  let xp = 0;
  const XP_MAX = 10000;

  function getRole(xp) {
    if (xp <= 999) return "Rookie";
    if (xp <= 1999) return "Apprentice";
    if (xp <= 2999) return "Adventurer";
    if (xp <= 3999) return "Challenger";
    if (xp <= 4999) return "Warrior";
    if (xp <= 5999) return "Elite";
    if (xp <= 6999) return "Hero";
    if (xp <= 7999) return "Master";
    if (xp <= 8999) return "Grandmaster";
    return "Legend";
  }

  function updateXPUI() {
    xpValue.textContent = xp;
    xpRole.textContent = getRole(xp);
    xpBar.style.width = (xp / XP_MAX * 100) + "%";
  }

  xpUp.addEventListener("click", function () {
    xp = Math.min(XP_MAX, xp + 100);
    updateXPUI();
  });
  xpDown.addEventListener("click", function () {
    xp = Math.max(0, xp - 100);
    updateXPUI();
  });

  updateXPUI();

  // === Edit Profile Logic ===
  const editProfileBtn = document.getElementById("editProfileBtn");
  const profileEditPanel = document.getElementById("profileEditPanel");
  const cancelEditProfile = document.getElementById("cancelEditProfile");

  // Ambil input di panel kanan saja
  const editNameInput = document.getElementById("editName");
  const editUsernameInput = document.getElementById("editUsername");
  const editEmailInput = document.getElementById("editEmail");
  const editPasswordInput = document.getElementById("editPassword");

  // Ambil input display di kiri
  const nameInput = document.querySelector('input[placeholder="Nama lengkap"]');
  const usernameInput = document.querySelector('input[placeholder="username_ku"]');
  const emailInput = document.querySelector('input[placeholder="email@example.com"]');
  // Jika ingin simpan password sementara, tambahkan input hidden di kiri

  // Saat Edit Profil ditekan, tampilkan panel edit di kanan
  editProfileBtn.addEventListener("click", function () {
    // Isi form edit dengan data saat ini
    editNameInput.value = avatarName.textContent !== "Nama" ? avatarName.textContent : "";
    editUsernameInput.value = avatarUsername.textContent !== "@username" ? avatarUsername.textContent.replace("@", "") : "";
    editEmailInput.value = emailInput ? emailInput.value : "";
    editPasswordInput.value = ""; // Kosongkan demi keamanan

    profileEditPanel.classList.add("active");
  });

  // Batal edit: sembunyikan panel edit
  cancelEditProfile.addEventListener("click", function () {
    profileEditPanel.classList.remove("active");
  });

  // Simpan perubahan
  document.getElementById("editProfileForm").addEventListener("submit", function (e) {
    e.preventDefault();
    avatarName.textContent = editNameInput.value.trim() || "Nama";
    avatarUsername.textContent = editUsernameInput.value.trim() ? "@" + editUsernameInput.value.trim() : "@username";
    if (emailInput) emailInput.value = editEmailInput.value;
    // Password tidak perlu disimpan di display
    profileEditPanel.classList.remove("active");
  });

  // Toggle password di form edit
  document.getElementById("toggleEditPassword").addEventListener("click", function () {
    const pw = document.getElementById("editPassword");
    pw.type = pw.type === "password" ? "text" : "password";
    this.querySelector("i").classList.toggle("fa-eye");
    this.querySelector("i").classList.toggle("fa-eye-slash");
  });

  // Buka input file saat avatar atau icon edit diklik
  avatarImg.addEventListener("click", () => avatarInput.click());
  avatarEditIcon.addEventListener("click", (e) => {
    e.stopPropagation();
    avatarInput.click();
  });
});
